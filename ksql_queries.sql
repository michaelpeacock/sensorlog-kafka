CREATE STREAM SENSORLOG_JSON (
	ACCELEROMETERACCELERATIONX DOUBLE, 
	ACCELEROMETERACCELERATIONY DOUBLE, 
	ACCELEROMETERACCELERATIONZ DOUBLE, 
	ACCELEROMETERTIMESTAMP_SINCEREBOOT DOUBLE, 
	ACTIVITY STRING, 
	ACTIVITYACTIVITYCONFIDENCE INTEGER, 
	ACTIVITYACTIVITYSTARTDATE STRING, 
	ACTIVITYTIMESTAMP_SINCEREBOOT DOUBLE, 
	ALTIMETERPRESSURE DOUBLE, 
	ALTIMETERRELATIVEALTITUDE DOUBLE, 
	ALTIMETERRESET INTEGER, 
	ALTIMETERTIMESTAMP_SINCEREBOOT DOUBLE, 
	AVAUDIORECORDER_TIMESTAMP_SINCE1970 DOUBLE, 
	AVAUDIORECORDERAVERAGEPOWER DOUBLE, 
	AVAUDIORECORDERPEAKPOWER DOUBLE, 
	BATTERYLEVEL DOUBLE, 
	BATTERYSTATE INTEGER, 
	BATTERYTIMESTAMP_SINCE1970 DOUBLE, 
	DEVICEID STRING, 
	DEVICEORIENTATION INTEGER, 
	DEVICEORIENTATIONTIMESTAMP_SINCE1970 DOUBLE, 
	GYROROTATIONX DOUBLE, 
	GYROROTATIONY DOUBLE, 
	GYROROTATIONZ DOUBLE, 
	GYROTIMESTAMP_SINCEREBOOT DOUBLE, 
	IP_EN0 STRING, 
	IP_PDP_IP0 STRING, 
	IP_TIMESTAMP_SINCE1970 DOUBLE, 
	LABEL INTEGER, 
	LOCATIONALTITUDE DOUBLE, 
	LOCATIONCOURSE DOUBLE, 
	LOCATIONCOURSEACCURACY DOUBLE, 
	LOCATIONFLOOR INTEGER, 
	LOCATIONHEADINGACCURACY DOUBLE, 
	LOCATIONHEADINGTIMESTAMP_SINCE1970 DOUBLE, 
	LOCATIONHEADINGX DOUBLE, 
	LOCATIONHEADINGY DOUBLE, 
	LOCATIONHEADINGZ DOUBLE, 
	LOCATIONHORIZONTALACCURACY DOUBLE, 
	LOCATIONLATITUDE DOUBLE, 
	LOCATIONLONGITUDE DOUBLE, 
	LOCATIONMAGNETICHEADING DOUBLE, 
	LOCATIONSPEED DOUBLE, 
	LOCATIONSPEEDACCURACY DOUBLE, 
	LOCATIONTIMESTAMP_SINCE1970 DOUBLE, 
	LOCATIONTRUEHEADING DOUBLE, 
	LOCATIONVERTICALACCURACY DOUBLE, 
	LOGGINGTIME STRING, 
	MAGNETOMETERTIMESTAMP_SINCEREBOOT DOUBLE, 
	MAGNETOMETERX DOUBLE, 
	MAGNETOMETERY DOUBLE, 
	MAGNETOMETERZ DOUBLE, 
	MOTIONATTITUDEREFERENCEFRAME STRING, 
	MOTIONGRAVITYX DOUBLE, 
	MOTIONGRAVITYY DOUBLE, 
	MOTIONGRAVITYZ DOUBLE, 
	MOTIONHEADING DOUBLE, 
	MOTIONMAGNETICFIELDCALIBRATIONACCURACY DOUBLE, 
	MOTIONMAGNETICFIELDX DOUBLE, 
	MOTIONMAGNETICFIELDY DOUBLE, 
	MOTIONMAGNETICFIELDZ DOUBLE, 
	MOTIONPITCH DOUBLE, 
	MOTIONQUATERNIONW DOUBLE, 
	MOTIONQUATERNIONX DOUBLE, 
	MOTIONQUATERNIONY DOUBLE, 
	MOTIONQUATERNIONZ DOUBLE, 
	MOTIONROLL DOUBLE, 
	MOTIONROTATIONRATEX DOUBLE, 
	MOTIONROTATIONRATEY DOUBLE, 
	MOTIONROTATIONRATEZ DOUBLE, 
	MOTIONTIMESTAMP_SINCEREBOOT DOUBLE, 
	MOTIONUSERACCELERATIONX DOUBLE, 
	MOTIONUSERACCELERATIONY DOUBLE, 
	MOTIONUSERACCELERATIONZ DOUBLE, 
	MOTIONYAW DOUBLE, 
	PEDOMETERAVERAGEACTIVEPACE DOUBLE, 
	PEDOMETERCURRENTCADENCE DOUBLE, 
	PEDOMETERCURRENTPACE DOUBLE, 
	PEDOMETERDISTANCE DOUBLE, 
	PEDOMETERENDDATE STRING, 
	PEDOMETERFLOORSASCENDED INTEGER, 
	PEDOMETERFLOORSDESCENDED INTEGER, 
	PEDOMETERNUMBEROFSTEPS INTEGER, 
	PEDOMETERSTARTDATE STRING) WITH (KAFKA_TOPIC='sensorlog', KEY_FORMAT='KAFKA', VALUE_FORMAT='JSON');

CREATE STREAM SENSOR_GYROSCOPE WITH (KAFKA_TOPIC='gyroscope_updates', VALUE_FORMAT='AVRO') AS SELECT
  SENSORLOG_JSON.DEVICEID DEVICEID,
  UNIX_TIMESTAMP() LOG_TIME,  
  SENSORLOG_JSON.GYROROTATIONX GYROROTATIONX,  
  SENSORLOG_JSON.GYROROTATIONY GYROROTATIONY, 
  SENSORLOG_JSON.GYROROTATIONZ GYROROTATIONZ
  FROM SENSORLOG_JSON SENSORLOG_JSON EMIT CHANGES;

CREATE STREAM SENSOR_ACCELEROMETER WITH (KAFKA_TOPIC='accelerometer_updates', VALUE_FORMAT='AVRO') AS SELECT  
	SENSORLOG_JSON.DEVICEID DEVICEID,
	UNIX_TIMESTAMP() LOG_TIME,
	SENSORLOG_JSON.ACCELEROMETERACCELERATIONX ACCELEROMETERACCELERATIONX,  SENSORLOG_JSON.ACCELEROMETERACCELERATIONY ACCELEROMETERACCELERATIONY, SENSORLOG_JSON.ACCELEROMETERACCELERATIONZ ACCELEROMETERACCELERATIONZ
	FROM SENSORLOG_JSON SENSORLOG_JSON EMIT CHANGES;

CREATE STREAM SENSOR_LOCATION WITH (KAFKA_TOPIC='location_updates', VALUE_FORMAT='AVRO') AS SELECT
  SENSORLOG_JSON.DEVICEID DEVICEID,
  UNIX_TIMESTAMP() LOG_TIME,
  SENSORLOG_JSON.LOCATIONLATITUDE LOCATIONLATITUDE,
  SENSORLOG_JSON.LOCATIONLONGITUDE LOCATIONLONGITUDE
  FROM SENSORLOG_JSON SENSORLOG_JSON EMIT CHANGES;

CREATE STREAM SENSOR_ORIENTATION WITH (KAFKA_TOPIC='sensor_orientation', VALUE_FORMAT='AVRO') AS SELECT
	UNIX_TIMESTAMP() LOG_TIME,
	(CASE WHEN (SENSORLOG_JSON.DEVICEORIENTATION = 1) THEN 'Up' 
		WHEN (SENSORLOG_JSON.DEVICEORIENTATION = 2) THEN 'Upside Down' 
		WHEN (SENSORLOG_JSON.DEVICEORIENTATION = 3) THEN 'Left' 
		WHEN (SENSORLOG_JSON.DEVICEORIENTATION = 4) THEN 'Right' 
		WHEN (SENSORLOG_JSON.DEVICEORIENTATION = 5) THEN 'Face Up' 
		WHEN (SENSORLOG_JSON.DEVICEORIENTATION = 6) THEN 'Face Down' 
		ELSE 'Unknown' END) CURRENT_ORIENTATION
	FROM SENSORLOG_JSON SENSORLOG_JSON EMIT CHANGES;